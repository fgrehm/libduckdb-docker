name: Build, test and release

on:
  push:
    branches:
      - "main"
  workflow_dispatch:
    inputs:
      scratch:
        description: 'Build scratch image'
        required: false
        type: boolean
      alpine:
        description: 'Build Alpine image'
        required: false
        type: boolean

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      alpine: ${{ steps.filter.outputs.alpine }}
      scratch: ${{ steps.filter.outputs.scratch }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            alpine:
              - 'tests/**'
              - '!tests/Dockerfile.scratch'
              - 'Dockerfile.alpine'
            scratch:
              - 'tests/**'
              - '!tests/Dockerfile.alpine'
              - 'Dockerfile.scratch'

  build-and-test-scratch:
    needs: changes
    if: ${{ needs.changes.outputs.scratch == 'true' || inputs.scratch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        duckdb_version: ['0.8.0']
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          build-args:
            DUCKDB_VERSION=${{ matrix.duckdb_version }}
          context: .
          file: ./Dockerfile.scratch
          load: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/libduckdb:${{ matrix.duckdb_version }}
      -
        name: Test
        run: |
          docker build \
            --build-arg REPOSITORY="${{ secrets.DOCKERHUB_USERNAME }}/libduckdb" \
            --build-arg DUCKDB_VERSION="${{ matrix.duckdb_version }}" \
            -t test \
            -f tests/Dockerfile.slim \
            .
          docker run --rm test ruby test.rb
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          build-args:
            DUCKDB_VERSION=${{ matrix.duckdb_version }}
          context: .
          file: ./Dockerfile.scratch
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/libduckdb:${{ matrix.duckdb_version }}

  build-and-test-alpine:
    needs: changes
    if: ${{ needs.changes.outputs.alpine == 'true' || inputs.alpine }}
    strategy:
      matrix:
        duckdb_version: ['0.8.0']
        alpine_version: ['3.17', '3.18']
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          build-args: |
            ALPINE_VERSION=${{ matrix.alpine_version }}
            DUCKDB_VERSION=${{ matrix.duckdb_version }}
          context: .
          file: ./Dockerfile.alpine
          load: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/libduckdb:${{ matrix.duckdb_version }}-alpine${{ matrix.alpine_version }}
      -
        name: Test
        run: |
          docker build \
            --build-arg REPOSITORY="${{ secrets.DOCKERHUB_USERNAME }}/libduckdb" \
            --build-arg ALPINE_VERSION="${{ matrix.alpine_version }}" \
            --build-arg DUCKDB_VERSION="${{ matrix.duckdb_version }}" \
            -t test \
            -f tests/Dockerfile.alpine \
            .
          docker run --rm test ruby test.rb
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          build-args: |
            ALPINE_VERSION=${{ matrix.alpine_version }}
            DUCKDB_VERSION=${{ matrix.duckdb_version }}
          context: .
          file: ./Dockerfile.alpine
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/libduckdb:${{ matrix.duckdb_version }}-alpine${{ matrix.alpine_version }}
